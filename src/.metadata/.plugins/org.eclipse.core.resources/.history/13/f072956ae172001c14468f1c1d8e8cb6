package Day_Jan06;

class Student 
{

	int rollno;			// instance variable
	String name;		// instance variable
	static String college = "Cyber Success"; // static variable

	Student(int id, String str)    //Parameterized constructor
	{
		rollno = id;
		name = str;
	}

	// method to display the values non-static method
	void display()      	
	{
		System.out.println(rollno + " " + name + " " + college);
	}
}

// Test class to show the values of objects
public class TestStaticVariable1
{
	public static void main(String args[])
	{
		Student s1 = new Student(101, "Karan");
		Student s2 = new Student(102, "Aryan");
		// we can change the college of all objects by the single line of code
		// Student.college="anything";
		s1.display();
		s2.display();
	}


}


/* O/P -
 
111 Karan ITS
222 Aryan ITS

 */

/*

Suppose there are 500 students in my college, now all instance data members 
will get memory each time when the object is created. All students have its 
unique rollno and name, so instance data member is good in such case. 
Here, "college" refers to the common property of all objects
. If we make it static, this field will get the memory only once.

1) Java static variable
If you declare any variable as static, it is known as a static variable.

The static variable can be used to refer to the common property of all objects (which is not unique for each object), for example, the company name of employees, college name of students, etc.
The static variable gets memory only once in the class area at the time of class loading.
Advantages of static variable
It makes your program memory efficient (i.e., it saves memory).

*/